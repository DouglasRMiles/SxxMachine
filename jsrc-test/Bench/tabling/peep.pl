:- style_check(-singleton).

:- table member1__1/2.
:- table peepelimupd__1/4.
:- table peepdel__1/3.
:- table apeepelim__1/6.
:- table peepelim__1/6.
:- table peepredundant__1/6.
:- table peepterm__1/2.
:- table peepchk__1/2.
:- table peepuse__1/2.
:- table poptchkmember__1/3.
:- table poptmovreg0__1/4.
:- table poptmovreg__1/5.
:- table notmember1__1/2.
:- table compbuiltin__1/3.
:- table poptbuiltin__1/4.
:- table comppopt4__1/5.
:- table poptuni2bld__1/2.
:- table comppopt1a__1/2.
:- table comppopt1av__1/2.
:- table comppopt11__1/3.
:- table comppopt1__1/2.
:- table comppeepopt__1/3.

main:-test.

top:-
    (tp,fail;true).

go:-
    cputime(S),
    (tp,fail;true),
    cputime(E),
    T is E-S,
    write('Time = '),write(T),nl.


test :- tp, fail.
test :- writeln('=========== Result is ================'), nl, show_facts.

unify_sets([],[]).
unify_sets([A|As],[B|Bs]) :- 
       set_unify(A,B), unify_sets(As,Bs).


%---------------- Transformed program ----------------------

comppeepopt__1(_288,_290,_292) :- 
        _244 = _294, _86 = _296, _100 = _298, 
        comppopt1(_244,_259),
        comppopt4(_259,[list],_192,_100,_86),
        normalize_result([_294,_296,_298],
                         [_288,_290,_292]).
comppopt1__1(_116,_118) :- 
        [list] = _120, [list] = _122, 
        normalize_result([_120,_122],
                          [_116,_118]).
comppopt1__1(_202,_204) :- 
        [list|_164] = _206, _102 = _208, 
        comppopt11(_183,_164,_102),
        normalize_result([_206,_208],
                         [_202,_204]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1a(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1a(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_270,_272,_274) :- 
        [other] = _276, [list|_212] = _278, _118 = _280, 
        'my =:='(_237,_235),
        comppopt11(_246,_212,_118),
        normalize_result([_276,_278,_280],
                         [_270,_272,_274]).
comppopt11__1(_300,_302,_304) :- 
        [other] = _306, [list|_236] = _308, _118 = _310, 
        'my =\\='(_261,_259),
        poptmovreg(_274,_259,_261,_236,_118),
        normalize_result([_306,_308,_310],
                         [_300,_302,_304]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1a(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_238,_240,_242) :- 
        [other] = _244, [list,list|_218] = _246, [list|_202] = _248, 
        comppopt1(_218,_202),
        normalize_result([_244,_246,_248],
                         [_238,_240,_242]).
comppopt11__1(_238,_240,_242) :- 
        [other] = _244, [list,list|_218] = _246, [list|_202] = _248, 
        comppopt1(_218,_202),
        normalize_result([_244,_246,_248],
                         [_238,_240,_242]).
comppopt11__1(_238,_240,_242) :- 
        [other] = _244, [list,list|_218] = _246, [list|_202] = _248, 
        comppopt1(_218,_202),
        normalize_result([_244,_246,_248],
                         [_238,_240,_242]).
comppopt11__1(_188,_190,_192) :- 
        [other] = _194, _168 = _196, _102 = _198, 
        comppopt1(_168,_102),
        normalize_result([_194,_196,_198],
                         [_188,_190,_192]).
comppopt11__1(_276,_278,_280) :- 
        [other] = _282, [list|_253] = _284, [list|_230] = _286, 
        peepchk(_253,_172),
        comppopt1(_253,_230),
        normalize_result([_282,_284,_286],
                         [_276,_278,_280]).
comppopt11__1(_238,_240,_242) :- 
        [other] = _244, [list|_218] = _246, [list,list|_138] = _248, 
        comppopt1(_218,_138),
        normalize_result([_244,_246,_248],
                         [_238,_240,_242]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_228,_230,_232) :- 
        [other] = _234, [list|_208] = _236, [list|_192] = _238, 
        comppopt1(_208,_192),
        normalize_result([_234,_236,_238],
                         [_228,_230,_232]).
comppopt11__1(_204,_206,_208) :- 
        _169 = _210, _184 = _212, [list|_168] = _214, 
        comppopt1(_184,_168),
        normalize_result([_210,_212,_214],
                         [_204,_206,_208]).
comppopt1av__1(_116,_118) :- 
        [list] = _120, [list] = _122, 
        normalize_result([_120,_122],
                          [_116,_118]).
comppopt1a__1(_255,_257) :- 
        [list|_234] = _259, [list|_212] = _261, 
        poptuni2bld(_227,_158),
        comppopt1a(_234,_212),
        normalize_result([_259,_261],
                         [_255,_257]).
comppopt1a__1(_202,_204) :- 
        [list|_164] = _206, _102 = _208, 
        comppopt11(_183,_164,_102),
        normalize_result([_206,_208],
                         [_202,_204]).
poptuni2bld__1(_116,_118) :- 
        [other] = _120, [other] = _122, 
        normalize_result([_120,_122],
                          [_116,_118]).
poptuni2bld__1(_116,_118) :- 
        [other] = _120, [other] = _122, 
        normalize_result([_120,_122],
                          [_116,_118]).
poptuni2bld__1(_116,_118) :- 
        [other] = _120, [other] = _122, 
        normalize_result([_120,_122],
                          [_116,_118]).
poptuni2bld__1(_116,_118) :- 
        [other] = _120, [other] = _122, 
        normalize_result([_120,_122],
                          [_116,_118]).
poptuni2bld__1(_116,_118) :- 
        [other] = _120, [other] = _122, 
        normalize_result([_120,_122],
                          [_116,_118]).
poptuni2bld__1(_116,_118) :- 
        [atom] = _120, [atom] = _122, 
        normalize_result([_120,_122],
                          [_116,_118]).
poptuni2bld__1(_116,_118) :- 
        [other] = _120, [other] = _122, 
        normalize_result([_120,_122],
                          [_116,_118]).
poptuni2bld__1(_116,_118) :- 
        [other] = _120, [other] = _122, 
        normalize_result([_120,_122],
                          [_116,_118]).
comppopt4__1(_173,_175,_177,_179,_181) :- 
        [list] = _183, _88 = _185, _102 = _187, _116 = _189, [list] = _191, 
        normalize_result([_183,_185,_187,_189,_191],
                          [_173,_175,_177,_179,_181]).
comppopt4__1(_410,_412,_414,_416,_418) :- 
        [list|_377] = _420, _362 = _422, _116 = _424, _130 = _426, _144 = _428, 
        poptbuiltin(_348,_130,_144,_208),
        'my ='(_364,_362),
        comppopt4(_377,_364,_116,_130,_208),
        normalize_result([_420,_422,_424,_426,_428],
                         [_410,_412,_414,_416,_418]).
comppopt4__1(_489,_491,_493,_495,_497) :- 
        [list|_453] = _499, _102 = _501, _116 = _503, _130 = _505, _440 = _507, 
        peepredundant(_406,_453,_102,_208,_116,_426),
        'my =:='(_426,[num]),
        'my ='(_440,_438),
        comppopt4(_453,_208,_116,_130,_438),
        normalize_result([_499,_501,_503,_505,_507],
                         [_489,_491,_493,_495,_497]).
comppopt4__1(_509,_511,_513,_515,_517) :- 
        [list|_473] = _519, _102 = _521, _116 = _523, _130 = _525, _460 = _527, 
        peepredundant(_422,_473,_102,_208,_116,_442),
        'my =\\='(_442,[num]),
        'my ='(_460,[list|_457]),
        comppopt4(_473,_208,_116,_130,_457),
        normalize_result([_519,_521,_523,_525,_527],
                         [_509,_511,_513,_515,_517]).
poptbuiltin__1(_298,_300,_302,_304) :- 
        [other] = _306, _88 = _308, [list|_242] = _310, _242 = _312, 
        compbuiltin(_263,_170,_184),
        notmember1([other],_88),
        normalize_result([_306,_308,_310,_312],
                         [_298,_300,_302,_304]).
poptbuiltin__1(_298,_300,_302,_304) :- 
        [other] = _306, _88 = _308, [list|_242] = _310, _242 = _312, 
        compbuiltin(_263,_170,_184),
        notmember1([other],_88),
        normalize_result([_306,_308,_310,_312],
                         [_298,_300,_302,_304]).
poptbuiltin__1(_308,_310,_312,_314) :- 
        [other] = _316, _88 = _318, [list,list|_122] = _320, _122 = _322, 
        compbuiltin(_273,_178,_192),
        notmember1([other],_88),
        normalize_result([_316,_318,_320,_322],
                         [_308,_310,_312,_314]).
compbuiltin__1(_139,_141,_143) :- 
        [atom] = _145, [num] = _147, [num] = _149, 
        normalize_result([_145,_147,_149],
                          [_139,_141,_143]).
compbuiltin__1(_139,_141,_143) :- 
        [atom] = _145, [num] = _147, [num] = _149, 
        normalize_result([_145,_147,_149],
                          [_139,_141,_143]).
notmember1__1(_112,_114) :- 
        _101 = _116, [list] = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
notmember1__1(_228,_230) :- 
        _207 = _232, [list|_178] = _234, 
        'my =\\='(_207,_198),
        notmember1(_207,_178),
        normalize_result([_232,_234],
                         [_228,_230]).
poptmovreg__1(_409,_411,_413,_415,_417) :- 
        _342 = _419, _86 = _421, _100 = _423, _376 = _425, _369 = _427, 
        poptmovreg0(_342,_86,_100,_190),
        peepchk(_376,_86),
        'my ='(_369,[list|_366]),
        comppopt1(_376,_366),
        normalize_result([_419,_421,_423,_425,_427],
                         [_409,_411,_413,_415,_417]).
poptmovreg__1(_295,_297,_299,_301,_303) :- 
        _231 = _305, _86 = _307, _100 = _309, _268 = _311, _261 = _313, 
        'my ='(_261,[list,list|_178]),
        comppopt1(_268,_178),
        normalize_result([_305,_307,_309,_311,_313],
                         [_295,_297,_299,_301,_303]).
poptmovreg0__1(_154,_156,_158,_160) :- 
        [other] = _162, _88 = _164, _102 = _166, [other] = _168, 
        normalize_result([_162,_164,_166,_168],
                          [_154,_156,_158,_160]).
poptmovreg0__1(_154,_156,_158,_160) :- 
        [other] = _162, _88 = _164, _102 = _166, [other] = _168, 
        normalize_result([_162,_164,_166,_168],
                          [_154,_156,_158,_160]).
poptmovreg0__1(_154,_156,_158,_160) :- 
        [other] = _162, _88 = _164, _102 = _166, [other] = _168, 
        normalize_result([_162,_164,_166,_168],
                          [_154,_156,_158,_160]).
poptmovreg0__1(_154,_156,_158,_160) :- 
        [other] = _162, _88 = _164, _102 = _166, [other] = _168, 
        normalize_result([_162,_164,_166,_168],
                          [_154,_156,_158,_160]).
poptchkmember__1(_151,_153,_155) :- 
        _137 = _157, [list|_132] = _159, [num] = _161, 
        normalize_result([_157,_159,_161],
                          [_151,_153,_155]).
poptchkmember__1(_151,_153,_155) :- 
        _137 = _157, [list|_132] = _159, [num] = _161, 
        normalize_result([_157,_159,_161],
                          [_151,_153,_155]).
poptchkmember__1(_225,_227,_229) :- 
        _204 = _231, [list|_182] = _233, [num] = _235, 
        poptchkmember(_204,_182,_168),
        normalize_result([_231,_233,_235],
                         [_225,_227,_229]).
peepuse__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepuse__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepuse__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepuse__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepuse__1(_172,_174) :- 
        [other] = _176, _88 = _178, 
        'my =\\='(_154,[num]),
        normalize_result([_176,_178],
                         [_172,_174]).
peepuse__1(_172,_174) :- 
        [other] = _176, _88 = _178, 
        'my =\\='(_154,[num]),
        normalize_result([_176,_178],
                         [_172,_174]).
peepuse__1(_172,_174) :- 
        [other] = _176, _88 = _178, 
        'my =\\='(_154,[num]),
        normalize_result([_176,_178],
                         [_172,_174]).
peepuse__1(_172,_174) :- 
        [other] = _176, _88 = _178, 
        'my =\\='(_154,[num]),
        normalize_result([_176,_178],
                         [_172,_174]).
peepuse__1(_172,_174) :- 
        [other] = _176, _88 = _178, 
        'my =\\='(_154,[num]),
        normalize_result([_176,_178],
                         [_172,_174]).
peepuse__1(_172,_174) :- 
        [other] = _176, _88 = _178, 
        'my =\\='(_154,[num]),
        normalize_result([_176,_178],
                         [_172,_174]).
peepchk__1(_112,_114) :- 
        [list] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepchk__1(_187,_189) :- 
        [list|_152] = _191, _102 = _193, 
        peepterm(_169,_102),
        normalize_result([_191,_193],
                         [_187,_189]).
peepchk__1(_185,_187) :- 
        [list|_167] = _189, _102 = _191, 
        peepchk(_167,_102),
        normalize_result([_189,_191],
                         [_185,_187]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [atom] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepterm__1(_112,_114) :- 
        [other] = _116, _88 = _118, 
        normalize_result([_116,_118],
                          [_112,_114]).
peepredundant__1(_190,_192,_194,_196,_198,_200) :- 
        [atom] = _202, _88 = _204, _102 = _206, _102 = _208, _128 = _210, [num] = _212, 
        normalize_result([_202,_204,_206,_208,_210,_212],
                          [_190,_192,_194,_196,_198,_200]).
peepredundant__1(_301,_303,_305,_307,_309,_311) :- 
        _271 = _313, _86 = _315, _100 = _317, _114 = _319, _128 = _321, _142 = _323, 
        peepelim(_271,_86,_100,_114,_128,_142),
        normalize_result([_313,_315,_317,_319,_321,_323],
                         [_301,_303,_305,_307,_309,_311]).
peepredundant__1(_283,_285,_287,_289,_291,_293) :- 
        _213 = _295, _86 = _297, _236 = _299, _238 = _301, _128 = _303, _254 = _305, 
        'my ='(_238,_236),
        'my ='(_254,[num]),
        normalize_result([_295,_297,_299,_301,_303,_305],
                         [_283,_285,_287,_289,_291,_293]).
peepelim__1(_210,_212,_214,_216,_218,_220) :- 
        [other] = _222, _88 = _224, _180 = _226, [list|_180] = _228, _144 = _230, [num] = _232, 
        normalize_result([_222,_224,_226,_228,_230,_232],
                          [_210,_212,_214,_216,_218,_220]).
peepelim__1(_339,_341,_343,_345,_347,_349) :- 
        [other] = _351, _88 = _353, _305 = _355, _307 = _357, _130 = _359, _293 = _361, 
        member1([other],_305),
        'my ='(_293,[num]),
        'my ='(_307,_305),
        normalize_result([_351,_353,_355,_357,_359,_361],
                         [_339,_341,_343,_345,_347,_349]).
peepelim__1(_307,_309,_311,_313,_315,_317) :- 
        [other] = _319, _88 = _321, _275 = _323, _278 = _325, _130 = _327, _260 = _329, 
        'my ='(_260,[num]),
        'my ='(_278,[list|_275]),
        normalize_result([_319,_321,_323,_325,_327,_329],
                         [_307,_309,_311,_313,_315,_317]).
peepelim__1(_339,_341,_343,_345,_347,_349) :- 
        [other] = _351, _88 = _353, _305 = _355, _307 = _357, _130 = _359, _293 = _361, 
        member1([other],_305),
        'my ='(_293,[num]),
        'my ='(_307,_305),
        normalize_result([_351,_353,_355,_357,_359,_361],
                         [_339,_341,_343,_345,_347,_349]).
peepelim__1(_307,_309,_311,_313,_315,_317) :- 
        [other] = _319, _88 = _321, _275 = _323, _278 = _325, _130 = _327, _260 = _329, 
        'my ='(_260,[num]),
        'my ='(_278,[list|_275]),
        normalize_result([_319,_321,_323,_325,_327,_329],
                         [_307,_309,_311,_313,_315,_317]).
peepelim__1(_339,_341,_343,_345,_347,_349) :- 
        [other] = _351, _88 = _353, _305 = _355, _307 = _357, _130 = _359, _293 = _361, 
        member1([other],_305),
        'my ='(_293,[num]),
        'my ='(_307,_305),
        normalize_result([_351,_353,_355,_357,_359,_361],
                         [_339,_341,_343,_345,_347,_349]).
peepelim__1(_307,_309,_311,_313,_315,_317) :- 
        [other] = _319, _88 = _321, _275 = _323, _278 = _325, _130 = _327, _260 = _329, 
        'my ='(_260,[num]),
        'my ='(_278,[list|_275]),
        normalize_result([_319,_321,_323,_325,_327,_329],
                         [_307,_309,_311,_313,_315,_317]).
peepelim__1(_339,_341,_343,_345,_347,_349) :- 
        [other] = _351, _88 = _353, _305 = _355, _307 = _357, _130 = _359, _293 = _361, 
        member1([other],_305),
        'my ='(_293,[num]),
        'my ='(_307,_305),
        normalize_result([_351,_353,_355,_357,_359,_361],
                         [_339,_341,_343,_345,_347,_349]).
peepelim__1(_307,_309,_311,_313,_315,_317) :- 
        [other] = _319, _88 = _321, _275 = _323, _278 = _325, _130 = _327, _260 = _329, 
        'my ='(_260,[num]),
        'my ='(_278,[list|_275]),
        normalize_result([_319,_321,_323,_325,_327,_329],
                         [_307,_309,_311,_313,_315,_317]).
peepelim__1(_339,_341,_343,_345,_347,_349) :- 
        [other] = _351, _88 = _353, _305 = _355, _307 = _357, _130 = _359, _293 = _361, 
        member1([other],_305),
        'my ='(_293,[num]),
        'my ='(_307,_305),
        normalize_result([_351,_353,_355,_357,_359,_361],
                         [_339,_341,_343,_345,_347,_349]).
peepelim__1(_307,_309,_311,_313,_315,_317) :- 
        [other] = _319, _88 = _321, _275 = _323, _278 = _325, _130 = _327, _260 = _329, 
        'my ='(_260,[num]),
        'my ='(_278,[list|_275]),
        normalize_result([_319,_321,_323,_325,_327,_329],
                         [_307,_309,_311,_313,_315,_317]).
peepelim__1(_287,_289,_291,_293,_295,_297) :- 
        [other] = _299, _88 = _301, _259 = _303, _116 = _305, _130 = _307, [num] = _309, 
        peepelimupd(_259,_184,[other],_116),
        normalize_result([_299,_301,_303,_305,_307,_309],
                         [_287,_289,_291,_293,_295,_297]).
peepelim__1(_339,_341,_343,_345,_347,_349) :- 
        [other] = _351, _88 = _353, _305 = _355, _307 = _357, _130 = _359, _293 = _361, 
        member1([other],_305),
        'my ='(_293,[num]),
        'my ='(_307,_305),
        normalize_result([_351,_353,_355,_357,_359,_361],
                         [_339,_341,_343,_345,_347,_349]).
peepelim__1(_330,_332,_334,_336,_338,_340) :- 
        [other] = _342, _88 = _344, _299 = _346, _116 = _348, _130 = _350, _286 = _352, 
        'my ='(_286,[num]),
        peepelimupd(_299,_210,[other],_116),
        normalize_result([_342,_344,_346,_348,_350,_352],
                         [_330,_332,_334,_336,_338,_340]).
peepelim__1(_339,_341,_343,_345,_347,_349) :- 
        [other] = _351, _88 = _353, _297 = _355, _116 = _357, _130 = _359, [num] = _361, 
        peepdel(_297,[other],_309),
        peepdel(_309,[other],_116),
        normalize_result([_351,_353,_355,_357,_359,_361],
                         [_339,_341,_343,_345,_347,_349]).
peepelim__1(_339,_341,_343,_345,_347,_349) :- 
        [other] = _351, _88 = _353, _305 = _355, _307 = _357, _130 = _359, _293 = _361, 
        member1([other],_305),
        'my ='(_293,[num]),
        'my ='(_307,_305),
        normalize_result([_351,_353,_355,_357,_359,_361],
                         [_339,_341,_343,_345,_347,_349]).
peepelim__1(_330,_332,_334,_336,_338,_340) :- 
        [other] = _342, _88 = _344, _299 = _346, _116 = _348, _130 = _350, _286 = _352, 
        'my ='(_286,[num]),
        peepelimupd(_299,_210,[other],_116),
        normalize_result([_342,_344,_346,_348,_350,_352],
                         [_330,_332,_334,_336,_338,_340]).
peepelim__1(_339,_341,_343,_345,_347,_349) :- 
        [other] = _351, _88 = _353, _305 = _355, _307 = _357, _130 = _359, _293 = _361, 
        member1([other],_305),
        'my ='(_293,[num]),
        'my ='(_307,_305),
        normalize_result([_351,_353,_355,_357,_359,_361],
                         [_339,_341,_343,_345,_347,_349]).
peepelim__1(_330,_332,_334,_336,_338,_340) :- 
        [other] = _342, _88 = _344, _299 = _346, _116 = _348, _130 = _350, _286 = _352, 
        'my ='(_286,[num]),
        peepelimupd(_299,_210,[other],_116),
        normalize_result([_342,_344,_346,_348,_350,_352],
                         [_330,_332,_334,_336,_338,_340]).
peepelim__1(_339,_341,_343,_345,_347,_349) :- 
        [other] = _351, _88 = _353, _305 = _355, _307 = _357, _130 = _359, _293 = _361, 
        member1([other],_305),
        'my ='(_293,[num]),
        'my ='(_307,_305),
        normalize_result([_351,_353,_355,_357,_359,_361],
                         [_339,_341,_343,_345,_347,_349]).
peepelim__1(_330,_332,_334,_336,_338,_340) :- 
        [other] = _342, _88 = _344, _299 = _346, _116 = _348, _130 = _350, _286 = _352, 
        'my ='(_286,[num]),
        peepelimupd(_299,_210,[other],_116),
        normalize_result([_342,_344,_346,_348,_350,_352],
                         [_330,_332,_334,_336,_338,_340]).
peepelim__1(_339,_341,_343,_345,_347,_349) :- 
        [other] = _351, _88 = _353, _305 = _355, _307 = _357, _130 = _359, _293 = _361, 
        member1([other],_305),
        'my ='(_293,[num]),
        'my ='(_307,_305),
        normalize_result([_351,_353,_355,_357,_359,_361],
                         [_339,_341,_343,_345,_347,_349]).
peepelim__1(_330,_332,_334,_336,_338,_340) :- 
        [other] = _342, _88 = _344, _299 = _346, _116 = _348, _130 = _350, _286 = _352, 
        'my ='(_286,[num]),
        peepelimupd(_299,_210,[other],_116),
        normalize_result([_342,_344,_346,_348,_350,_352],
                         [_330,_332,_334,_336,_338,_340]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_287,_289,_291,_293,_295,_297) :- 
        [other] = _299, _88 = _301, _259 = _303, _116 = _305, _130 = _307, [num] = _309, 
        peepelimupd(_259,_184,[other],_116),
        normalize_result([_299,_301,_303,_305,_307,_309],
                         [_287,_289,_291,_293,_295,_297]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_270,_272,_274,_276,_278,_280) :- 
        [other] = _282, _88 = _284, _243 = _286, _116 = _288, _130 = _290, [num] = _292, 
        peepdel(_243,[other],_116),
        normalize_result([_282,_284,_286,_288,_290,_292],
                         [_270,_272,_274,_276,_278,_280]).
peepelim__1(_308,_310,_312,_314,_316,_318) :- 
        [other] = _320, _88 = _322, _102 = _324, [list] = _326, _132 = _328, [num] = _330, 
        'my >='(_270,[num]),
        member1([other],_132),
        normalize_result([_320,_322,_324,_326,_328,_330],
                         [_308,_310,_312,_314,_316,_318]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [atom] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_382,_384,_386,_388,_390,_392) :- 
        [other] = _394, _322 = _396, _102 = _398, [list] = _400, _132 = _402, _146 = _404, 
        'my ='(_322,[list|_319]),
        'my >='(_338,[num]),
        poptchkmember([other],_132,_146),
        normalize_result([_394,_396,_398,_400,_402,_404],
                         [_382,_384,_386,_388,_390,_392]).
peepelim__1(_250,_252,_254,_256,_258,_260) :- 
        [other] = _262, _88 = _264, _102 = _266, [list] = _268, _132 = _270, _224 = _272, 
        'my ='(_224,[num]),
        normalize_result([_262,_264,_266,_268,_270,_272],
                         [_250,_252,_254,_256,_258,_260]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_293,_295,_297,_299,_301,_303) :- 
        [other] = _305, _88 = _307, _262 = _309, _264 = _311, _130 = _313, [num] = _315, 
        'my ='(_250,[num]),
        'my ='(_264,_262),
        normalize_result([_305,_307,_309,_311,_313,_315],
                         [_293,_295,_297,_299,_301,_303]).
peepelim__1(_250,_252,_254,_256,_258,_260) :- 
        [other] = _262, _88 = _264, _102 = _266, _224 = _268, _130 = _270, [num] = _272, 
        'my ='(_224,[list]),
        normalize_result([_262,_264,_266,_268,_270,_272],
                         [_250,_252,_254,_256,_258,_260]).
peepelim__1(_293,_295,_297,_299,_301,_303) :- 
        [other] = _305, _88 = _307, _262 = _309, _264 = _311, _130 = _313, [num] = _315, 
        'my ='(_250,[num]),
        'my ='(_264,_262),
        normalize_result([_305,_307,_309,_311,_313,_315],
                         [_293,_295,_297,_299,_301,_303]).
peepelim__1(_250,_252,_254,_256,_258,_260) :- 
        [other] = _262, _88 = _264, _102 = _266, _224 = _268, _130 = _270, [num] = _272, 
        'my ='(_224,[list]),
        normalize_result([_262,_264,_266,_268,_270,_272],
                         [_250,_252,_254,_256,_258,_260]).
peepelim__1(_293,_295,_297,_299,_301,_303) :- 
        [other] = _305, _88 = _307, _262 = _309, _264 = _311, _130 = _313, [num] = _315, 
        'my ='(_250,[num]),
        'my ='(_264,_262),
        normalize_result([_305,_307,_309,_311,_313,_315],
                         [_293,_295,_297,_299,_301,_303]).
peepelim__1(_250,_252,_254,_256,_258,_260) :- 
        [other] = _262, _88 = _264, _102 = _266, _224 = _268, _130 = _270, [num] = _272, 
        'my ='(_224,[list]),
        normalize_result([_262,_264,_266,_268,_270,_272],
                         [_250,_252,_254,_256,_258,_260]).
peepelim__1(_293,_295,_297,_299,_301,_303) :- 
        [other] = _305, _88 = _307, _262 = _309, _264 = _311, _130 = _313, [num] = _315, 
        'my ='(_250,[num]),
        'my ='(_264,_262),
        normalize_result([_305,_307,_309,_311,_313,_315],
                         [_293,_295,_297,_299,_301,_303]).
peepelim__1(_250,_252,_254,_256,_258,_260) :- 
        [other] = _262, _88 = _264, _102 = _266, _224 = _268, _130 = _270, [num] = _272, 
        'my ='(_224,[list]),
        normalize_result([_262,_264,_266,_268,_270,_272],
                         [_250,_252,_254,_256,_258,_260]).
apeepelim__1(_293,_295,_297,_299,_301,_303) :- 
        [other] = _305, _88 = _307, _262 = _309, _264 = _311, _130 = _313, [num] = _315, 
        'my ='(_250,[num]),
        'my ='(_264,_262),
        normalize_result([_305,_307,_309,_311,_313,_315],
                         [_293,_295,_297,_299,_301,_303]).
peepelim__1(_250,_252,_254,_256,_258,_260) :- 
        [other] = _262, _88 = _264, _102 = _266, _224 = _268, _130 = _270, [num] = _272, 
        'my ='(_224,[list]),
        normalize_result([_262,_264,_266,_268,_270,_272],
                         [_250,_252,_254,_256,_258,_260]).
peepelim__1(_293,_295,_297,_299,_301,_303) :- 
        [other] = _305, _88 = _307, _262 = _309, _264 = _311, _130 = _313, [num] = _315, 
        'my ='(_250,[num]),
        'my ='(_264,_262),
        normalize_result([_305,_307,_309,_311,_313,_315],
                         [_293,_295,_297,_299,_301,_303]).
peepelim__1(_250,_252,_254,_256,_258,_260) :- 
        [other] = _262, _88 = _264, _102 = _266, _224 = _268, _130 = _270, [num] = _272, 
        'my ='(_224,[list]),
        normalize_result([_262,_264,_266,_268,_270,_272],
                         [_250,_252,_254,_256,_258,_260]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepelim__1(_196,_198,_200,_202,_204,_206) :- 
        [other] = _208, _88 = _210, _102 = _212, [list] = _214, _132 = _216, [num] = _218, 
        normalize_result([_208,_210,_212,_214,_216,_218],
                          [_196,_198,_200,_202,_204,_206]).
peepdel__1(_135,_137,_139) :- 
        [list] = _141, _88 = _143, [list] = _145, 
        normalize_result([_141,_143,_145],
                          [_135,_137,_139]).
peepdel__1(_305,_307,_309) :- 
        [list|_278] = _311, _253 = _313, _269 = _315, 
        'my ='(_255,_253),
        'my ='(_269,_267),
        peepdel(_278,_253,_267),
        normalize_result([_311,_313,_315],
                         [_305,_307,_309]).
peepdel__1(_282,_284,_286) :- 
        [list|_258] = _288, _102 = _290, _249 = _292, 
        'my ='(_249,[list|_246]),
        peepdel(_258,_102,_246),
        normalize_result([_288,_290,_292],
                         [_282,_284,_286]).
peepelimupd__1(_244,_246,_248,_250) :- 
        _221 = _252, _86 = _254, _100 = _256, [list|_200] = _258, 
        peepdel(_221,[other],_200),
        normalize_result([_252,_254,_256,_258],
                         [_244,_246,_248,_250]).
member1__1(_128,_130) :- 
        _117 = _132, [list|_116] = _134, 
        normalize_result([_132,_134],
                          [_128,_130]).
member1__1(_185,_187) :- 
        _167 = _189, [list|_152] = _191, 
        member1(_167,_152),
        normalize_result([_189,_191],
                         [_185,_187]).

%---------------- Definitions of tabled preds --------------

member1(_63,_65) :- 
        member1__1(_67,_69),
        unify_sets([_63,_65], [_67,_69]).
peepelimupd(_63,_65,_67,_69) :- 
        peepelimupd__1(_71,_73,_75,_77),
        unify_sets([_63,_65,_67,_69], [_71,_73,_75,_77]).
peepdel(_63,_65,_67) :- 
        peepdel__1(_69,_71,_73),
        unify_sets([_63,_65,_67], [_69,_71,_73]).
apeepelim(_63,_65,_67,_69,_71,_73) :- 
        apeepelim__1(_75,_77,_79,_81,_83,_85),
        unify_sets([_63,_65,_67,_69,_71,_73], [_75,_77,_79,_81,_83,_85]).
peepelim(_63,_65,_67,_69,_71,_73) :- 
        peepelim__1(_75,_77,_79,_81,_83,_85),
        unify_sets([_63,_65,_67,_69,_71,_73], [_75,_77,_79,_81,_83,_85]).
peepredundant(_63,_65,_67,_69,_71,_73) :- 
        peepredundant__1(_75,_77,_79,_81,_83,_85),
        unify_sets([_63,_65,_67,_69,_71,_73], [_75,_77,_79,_81,_83,_85]).
peepterm(_63,_65) :- 
        peepterm__1(_67,_69),
        unify_sets([_63,_65], [_67,_69]).
peepchk(_63,_65) :- 
        peepchk__1(_67,_69),
        unify_sets([_63,_65], [_67,_69]).
peepuse(_63,_65) :- 
        peepuse__1(_67,_69),
        unify_sets([_63,_65], [_67,_69]).
poptchkmember(_63,_65,_67) :- 
        poptchkmember__1(_69,_71,_73),
        unify_sets([_63,_65,_67], [_69,_71,_73]).
poptmovreg0(_63,_65,_67,_69) :- 
        poptmovreg0__1(_71,_73,_75,_77),
        unify_sets([_63,_65,_67,_69], [_71,_73,_75,_77]).
poptmovreg(_63,_65,_67,_69,_71) :- 
        poptmovreg__1(_73,_75,_77,_79,_81),
        unify_sets([_63,_65,_67,_69,_71], [_73,_75,_77,_79,_81]).
notmember1(_63,_65) :- 
        notmember1__1(_67,_69),
        unify_sets([_63,_65], [_67,_69]).
compbuiltin(_63,_65,_67) :- 
        compbuiltin__1(_69,_71,_73),
        unify_sets([_63,_65,_67], [_69,_71,_73]).
poptbuiltin(_63,_65,_67,_69) :- 
        poptbuiltin__1(_71,_73,_75,_77),
        unify_sets([_63,_65,_67,_69], [_71,_73,_75,_77]).
comppopt4(_63,_65,_67,_69,_71) :- 
        comppopt4__1(_73,_75,_77,_79,_81),
        unify_sets([_63,_65,_67,_69,_71], [_73,_75,_77,_79,_81]).
poptuni2bld(_63,_65) :- 
        poptuni2bld__1(_67,_69),
        unify_sets([_63,_65], [_67,_69]).
comppopt1a(_63,_65) :- 
        comppopt1a__1(_67,_69),
        unify_sets([_63,_65], [_67,_69]).
comppopt1av(_63,_65) :- 
        comppopt1av__1(_67,_69),
        unify_sets([_63,_65], [_67,_69]).
comppopt11(_63,_65,_67) :- 
        comppopt11__1(_69,_71,_73),
        unify_sets([_63,_65,_67], [_69,_71,_73]).
comppopt1(_63,_65) :- 
        comppopt1__1(_67,_69),
        unify_sets([_63,_65], [_67,_69]).
comppeepopt(_63,_65,_67) :- 
        comppeepopt__1(_69,_71,_73),
        unify_sets([_63,_65,_67], [_69,_71,_73]).

%---------------- Tp ---------------------------------------

tp :- comppopt4__1(_64,_66,_68,_70,_72), fail.

tp :- member1__1(_64,_66), fail.
tp :- peepelimupd__1(_64,_66,_68,_70), fail.
tp :- peepdel__1(_64,_66,_68), fail.
tp :- apeepelim__1(_64,_66,_68,_70,_72,_74), fail.
tp :- peepelim__1(_64,_66,_68,_70,_72,_74), fail.
tp :- peepredundant__1(_64,_66,_68,_70,_72,_74), fail.
tp :- peepterm__1(_64,_66), fail.
tp :- peepchk__1(_64,_66), fail.
tp :- peepuse__1(_64,_66), fail.
tp :- poptchkmember__1(_64,_66,_68), fail.
tp :- poptmovreg0__1(_64,_66,_68,_70), fail.
tp :- poptmovreg__1(_64,_66,_68,_70,_72), fail.
tp :- notmember1__1(_64,_66), fail.
tp :- compbuiltin__1(_64,_66,_68), fail.
tp :- poptbuiltin__1(_64,_66,_68,_70), fail.

tp :- poptuni2bld__1(_64,_66), fail.
tp :- comppopt1a__1(_64,_66), fail.
tp :- comppopt1av__1(_64,_66), fail.
tp :- comppopt11__1(_64,_66,_68), fail.
tp :- comppopt1__1(_64,_66), fail.
tp :- comppeepopt__1(_64,_66,_68), fail.
tp.


%---------------- Builtin Preds ----------------------------

'my ='(X1,X2) :- 'my =_1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my \\=='(X1,X2) :- 'my \\==__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my is'([num],[num]).
'my <'([num],[num]).
'my >'([num],[num]).
'my >='([num],[num]).
'my =<'([num],[num]).
'my =:='([num],[num]).
'my =\\='([num],[num]).

'my =_1'(X,X).
'my \\==__1'(_,_).


%---------------- Show Result ------------------------------

show_facts :- member1__1(_63,_65),
              numbervars([_63,_65]),
              write(member1(_63,_65)), nl, fail.
show_facts :- peepelimupd__1(_63,_65,_67,_69),
              numbervars([_63,_65,_67,_69]),
              write(peepelimupd(_63,_65,_67,_69)), nl, fail.
show_facts :- peepdel__1(_63,_65,_67),
              numbervars([_63,_65,_67]),
              write(peepdel(_63,_65,_67)), nl, fail.
show_facts :- apeepelim__1(_63,_65,_67,_69,_71,_73),
              numbervars([_63,_65,_67,_69,_71,_73]),
              write(apeepelim(_63,_65,_67,_69,_71,_73)), nl, fail.
show_facts :- peepelim__1(_63,_65,_67,_69,_71,_73),
              numbervars([_63,_65,_67,_69,_71,_73]),
              write(peepelim(_63,_65,_67,_69,_71,_73)), nl, fail.
show_facts :- peepredundant__1(_63,_65,_67,_69,_71,_73),
              numbervars([_63,_65,_67,_69,_71,_73]),
              write(peepredundant(_63,_65,_67,_69,_71,_73)), nl, fail.
show_facts :- peepterm__1(_63,_65),
              numbervars([_63,_65]),
              write(peepterm(_63,_65)), nl, fail.
show_facts :- peepchk__1(_63,_65),
              numbervars([_63,_65]),
              write(peepchk(_63,_65)), nl, fail.
show_facts :- peepuse__1(_63,_65),
              numbervars([_63,_65]),
              write(peepuse(_63,_65)), nl, fail.
show_facts :- poptchkmember__1(_63,_65,_67),
              numbervars([_63,_65,_67]),
              write(poptchkmember(_63,_65,_67)), nl, fail.
show_facts :- poptmovreg0__1(_63,_65,_67,_69),
              numbervars([_63,_65,_67,_69]),
              write(poptmovreg0(_63,_65,_67,_69)), nl, fail.
show_facts :- poptmovreg__1(_63,_65,_67,_69,_71),
              numbervars([_63,_65,_67,_69,_71]),
              write(poptmovreg(_63,_65,_67,_69,_71)), nl, fail.
show_facts :- notmember1__1(_63,_65),
              numbervars([_63,_65]),
              write(notmember1(_63,_65)), nl, fail.
show_facts :- compbuiltin__1(_63,_65,_67),
              numbervars([_63,_65,_67]),
              write(compbuiltin(_63,_65,_67)), nl, fail.
show_facts :- poptbuiltin__1(_63,_65,_67,_69),
              numbervars([_63,_65,_67,_69]),
              write(poptbuiltin(_63,_65,_67,_69)), nl, fail.
show_facts :- comppopt4__1(_63,_65,_67,_69,_71),
              numbervars([_63,_65,_67,_69,_71]),
              write(comppopt4(_63,_65,_67,_69,_71)), nl, fail.
show_facts :- poptuni2bld__1(_63,_65),
              numbervars([_63,_65]),
              write(poptuni2bld(_63,_65)), nl, fail.
show_facts :- comppopt1a__1(_63,_65),
              numbervars([_63,_65]),
              write(comppopt1a(_63,_65)), nl, fail.
show_facts :- comppopt1av__1(_63,_65),
              numbervars([_63,_65]),
              write(comppopt1av(_63,_65)), nl, fail.
show_facts :- comppopt11__1(_63,_65,_67),
              numbervars([_63,_65,_67]),
              write(comppopt11(_63,_65,_67)), nl, fail.
show_facts :- comppopt1__1(_63,_65),
              numbervars([_63,_65]),
              write(comppopt1(_63,_65)), nl, fail.
show_facts :- comppeepopt__1(_63,_65,_67),
              numbervars([_63,_65,_67]),
              write(comppeepopt(_63,_65,_67)), nl, fail.
show_facts.
%----------------------------------------------------------
%:- import set_unify/2 from set_unify.

:- table set_unify/2.

set_unify(A,B) :-
	flatten(A,AF), flatten(B,BF),
        (my_ground(AF), my_ground(BF) -> AF==BF
          ;
         ord_union(AF,BF,ToCover),
         ord_setproduct(AF,BF,AxB),
         drop_nonuni(AxB,UTable),
         covering_u_table(UTable,ToCover,CovUTable),
         keysort(CovUTable,CovUTableS),
         table2graph(CovUTableS,CovUGraph),
         u_graph_proceed(CovUGraph)
        ).

drop_nonuni([],[]).
drop_nonuni([X-Y|AxB],Out) :-
        (\+ \+ X=Y -> Out = [X-Y|NewAxB] ; Out = NewAxB),
        drop_nonuni(AxB,NewAxB).

covering_u_table([],[],[]).
covering_u_table([X-Y|XsYs],ToCover,[X-L,Y-L|UTRest]) :-
        (X @< Y ->
         ord_subtract(ToCover,[X,Y],ToCoverRest)
          ;
         ord_subtract(ToCover,[Y,X],ToCoverRest)),
        covering_u_table(XsYs,ToCoverRest,UTRest).
covering_u_table([_|XsYs],ToCover,UTable) :-
        covering_u_table(XsYs,ToCover,UTable).

u_graph_proceed([]).
u_graph_proceed([V-E|G]) :- match_single(V,E), u_graph_proceed(G).

match_single(S,Y) :-
	var(S) -> S=Y ; match_list(Y,S).	% simple atom

match_list([],_).
match_list([S|Xs],S) :- match_list(Xs,S).

normalize_result(Args,SortedArgsC) :-!,
        flatten_sets(Args,ArgsF),
        occur_graph(ArgsF,OG),
        swap_keys_values(OG,GO),
        keysort(GO,GOS),
        drop_equiv(GOS,NewGO),
        graph2table(NewGO,OGTable),
	keysort(OGTable,OGTableS),	% was merge_keysort
        table2graph(OGTableS,KeysArgs),
        keys_and_values(KeysArgs,_,ArgsC),
	sortall(ArgsC,SortedArgsC).

sortall([], []).
sortall([H|T], [NH|NT]) :- sort(H,NH), sortall(T,NT).

drop_equiv([], []).
drop_equiv([One|Rest], Out) :- drop_equiv(One, Rest, Out).

%:- index drop_equiv/3-2.

drop_equiv(X, [], [X]).
drop_equiv(E1-V1, [E2-V2|Vs],Out) :-
        (E1==E2, my_variant(V1,V2) ->
         V1=V2, Out=OutRest
          ;
         Out=[E1-V1|OutRest]),
        drop_equiv(E2-V2, Vs, OutRest).

occur_graph(ArgsVs,OG) :-
        og_table(ArgsVs,0,OG_Table),
        sort(OG_Table,OG_TableSorted),
        table2graph(OG_TableSorted,OG).

og_table([],_,[]).
og_table([One|Args],I,OG_Table) :- og_table(One,Args,I,OG_Table).

og_table([],Args,I,OG_Table) :- !, J is I+1, og_table(Args,J,OG_Table).
og_table([V|Vs],Args,I,[V-I|OG_Table]) :- og_table(Vs,Args,I,OG_Table).

table2graph([],[]).
table2graph([One|Rest],Out) :- table2graph(One,Rest,Out).

%:- index table2graph/3-2.

table2graph(V-I,[],[V-[I]]).
table2graph(V-I,[W-J|Vs],Out) :-
        ( V==W ->
          Out = [V-[I|Is]|VsClps], Cont = [V-Is|VsClps]
          ;
          Out = [V-[I]|VsClps], Cont = VsClps),
        table2graph(W-J,Vs,Cont).

graph2table([],[]).
graph2table([Elem-V|Vs],Edges) :- graph2table(Elem,V,Vs,Edges).

graph2table([],_,Vs,Edges) :- graph2table(Vs,Edges).
graph2table([E|Es],V,Vs,[E-V|Edges]) :- graph2table(Es,V,Vs,Edges).

swap_keys_values([],[]).
swap_keys_values([Key-Val|KVs],[Val-Key|VKs]) :- swap_keys_values(KVs,VKs).

/*------------------ Bypasses a bug of SWI -----------------------------

merge_keysort([],[]) :- !.
merge_keysort([X],[X]) :- !.
merge_keysort(VL,VS) :-
        split(VL,VL1,VL2),
        merge_keysort(VL1,VL1S), merge_keysort(VL2,VL2S),
        merge(VL1S,VL2S,VS).

split([],[],[]) :- !.
split([X],[X],[]) :- !.
split([X1,X2|Xs],[X1|X1s],[X2|X2s]) :- split(Xs,X1s,X2s).

merge([],[],[]) :- !.
merge(L,[],L) :- !.
merge([],L,L) :- !.
merge([K1-V1|X1s],[K2-V2|X2s],[K1-V1|Xs]) :- K1@<K2, !,
        merge(X1s,[K2-V2|X2s],Xs).
merge([X1|X1s],[X2|X2s],[X2|Xs]) :- merge([X1|X1s],X2s,Xs).

  ----------------------------------------------------------------------*/

%%-----------------------------------------------------------------------------

keys_and_values([], [], []).
keys_and_values([Key-Value|Pairs], [Key|Keys], [Value|Values]) :-
   keys_and_values(Pairs, Keys, Values).

%%-----------------------------------------------------------------------------
% flatten(Set,SetF) :- colterms(Set,[],SetMemb), sort(SetMemb,SetF).

colterms(V,I,O) :- var(V), !, O = [V|I].
colterms([],I,O) :- !, O = I.
colterms(A,I,O) :- atom(A), !, O=[A|I].
colterms([T|Ts],I,O) :- colterms(T,I,IT), colterms(Ts,IT,O).

flatten_sets([],[]).
flatten_sets([T|Ts],[FT|FTs]) :- flatten(T,FT), flatten_sets(Ts,FTs).

%%-----------------------------------------------------------------------------
%% Operations on graphs

insert_vertice([],N,[N]).
insert_vertice([V-E|G],V1-E1,[V-EE1|G]) :- V==V1, ord_union(E,E1,EE1), !.
insert_vertice([N|G],N1,[N|NewG]) :- insert_vertice(G,N1,NewG).

%%-----------------------------------------------------------------------------
/*
occur_graph(ArgsV,OG) :- occur_graph(ArgsV,0,OG).
occur_graph([],_,[]).
occur_graph([L|A],I,OG) :- J is I+1, occur_graph(A,J,O1), ogl(L,I,O1,OG) .
*/

ogl([],_,O,O).
ogl([V|R],I,In,Out) :- ogl(R,I,In,O1), insert_vertice(O1,V-[I],Out).

%%-----------------------------------------------------------------------------

my_ground(X):-var(X),!,fail.
my_ground(X):-atomic(X),!,true.
my_ground([X|Xs]):-!,my_ground(X),my_ground(Xs).
my_ground(X):-functor(X,_,N),my_ground(X,N).

my_ground(X,N):-N=:=0,!,true.
my_ground(X,N):-N>0,arg(N,X,A),my_ground(A),N1 is N-1,my_ground(X,N1).


/*
numbervars(X):-my_number_vars(X,0,_).

my_number_vars(T, N0, N) :- 
    var(T),!, 
    T='$VAR'(N0),
    N is N0+1.
my_number_vars(T, N0, N) :- 
    atomic(T),!,
     N0=N.
my_number_vars([X|Xs], N0, N) :- !,
    my_number_vars(X, N0, N1),
    my_number_vars(Xs, N1, N).
my_number_vars(X, N0, N) :-
    functor(X, _, A),
    my_number_vars(0, A, X, N0, N).

my_number_vars(A, A, _, N0, N) :- !,
    N0=N.
my_number_vars(A0, A, X, N0, N) :-
    A1 is A0+1,
    arg(A1, X, X1),
    my_number_vars(X1, N0, N1),
    my_number_vars(A1, A, X, N1, N).


%   list_to_ord_set(+List, ?Set)
%   is true when Set is the ordered representation of the set represented
%   by the unordered representation List.  The only reason for giving it
%   a name at all is that you may not have realised that sort/2 could be
%   used this way.

list_to_ord_set(List, Set) :-
	sort(List, Set).


%   merge(+List1, +List2, -Merged)
%   is true when Merged is the stable merge of the two given lists.
%   If the two lists are not ordered, the merge doesn't mean a great
%   deal.  Merging is perfectly well defined when the inputs contain
%   duplicates, and all copies of an element are preserved in the
%   output, e.g. merge("122357", "34568", "12233455678").  Study this
%   routine carefully, as it is the basis for all the rest.

merge([Head1|Tail1], [Head2|Tail2], [Head2|Merged]) :-
	Head1 @> Head2, !,
	merge([Head1|Tail1], Tail2, Merged).
merge([Head1|Tail1], List2, [Head1|Merged]) :-
	List2 \== [], !,
	merge(Tail1, List2, Merged).
merge([], List2, List2) :- !.
merge(List1, [], List1).



%   ord_disjoint(+Set1, +Set2)
%   is true when the two ordered sets have no element in common.  If the
%   arguments are not ordered, I have no idea what happens.

ord_disjoint([], _) :- !.
ord_disjoint(_, []) :- !.
ord_disjoint([Head1|Tail1], [Head2|Tail2]) :-
	compare(Order, Head1, Head2),
	ord_disjoint(Order, Head1, Tail1, Head2, Tail2).

ord_disjoint(<, _, Tail1, Head2, Tail2) :-
	ord_disjoint(Tail1, [Head2|Tail2]).
ord_disjoint(>, Head1, Tail1, _, Tail2) :-
	ord_disjoint([Head1|Tail1], Tail2).



%   ord_insert(+Set1, +Element, ?Set2)
%   is the equivalent of add_element for ordered sets.  It should give
%   exactly the same result as merge(Set1, [Element], Set2), but a bit
%   faster, and certainly more clearly.

ord_insert([], Element, [Element]).
ord_insert([Head|Tail], Element, Set) :-
	compare(Order, Head, Element),
	ord_insert(Order, Head, Tail, Element, Set).


ord_insert(<, Head, Tail, Element, [Head|Set]) :-
	ord_insert(Tail, Element, Set).
ord_insert(=, Head, Tail, _, [Head|Tail]).
ord_insert(>, Head, Tail, Element, [Element,Head|Tail]).



%   ord_intersect(+Set1, +Set2)
%   is true when the two ordered sets have at least one element in common.
%   Note that the test is == rather than = .

ord_intersect([Head1|Tail1], [Head2|Tail2]) :-
	compare(Order, Head1, Head2),
	ord_intersect(Order, Head1, Tail1, Head2, Tail2).

ord_intersect(=, _, _, _, _).
ord_intersect(<, _, Tail1, Head2, Tail2) :-
	ord_intersect(Tail1, [Head2|Tail2]).
ord_intersect(>, Head1, Tail1, _, Tail2) :-
	ord_intersect([Head1|Tail1], Tail2).



%   ord_intersect(+Set1, +Set2, ?Intersection)
%   is true when Intersection is the ordered representation of Set1
%   and Set2, provided that Set1 and Set2 are ordered sets.

ord_intersect(_, [], []) :- !.
ord_intersect([], _, []) :- !.
ord_intersect([Head1|Tail1], [Head2|Tail2], Intersection) :-
	compare(Order, Head1, Head2),
	ord_intersect(Order, Head1, Tail1, Head2, Tail2, Intersection).

ord_intersect(=, Head,  Tail1, _,     Tail2, [Head|Intersection]) :-
	ord_intersect(Tail1, Tail2, Intersection).
ord_intersect(<, _,     Tail1, Head2, Tail2, Intersection) :-
	ord_intersect(Tail1, [Head2|Tail2], Intersection).
ord_intersect(>, Head1, Tail1, _,     Tail2, Intersection) :-
	ord_intersect([Head1|Tail1], Tail2, Intersection).



%   ord_seteq(+Set1, +Set2)
%   is true when the two arguments represent the same set.  Since they
%   are assumed to be ordered representations, they must be identical.


ord_seteq(Set1, Set2) :-
	Set1 == Set2.


%   ord_setproduct(+Set1, +Set2, ?Product)
%   is in fact identical to setproduct(Set1, Set2, Product).
%   If Set1 and Set2 are ordered sets, Product will be an ordered
%   set of x1-x2 pairs.  Note that we cannot solve for Set1 and
%   Set2, because there are infinitely many solutions when
%   Product is empty, and may be a large number in other cases.

ord_setproduct([], _, []).
ord_setproduct([H|T], L, Product) :-
	ord_setproduct(L, H, Product, Rest),
	ord_setproduct(T, L, Rest).

ord_setproduct([], _, L, L).
ord_setproduct([H|T], X, [X-H|TX], TL) :-
	ord_setproduct(T, X, TX, TL).


%   ord_subset(+Set1, +Set2)
%   is true when every element of the ordered set Set1 appears in the
%   ordered set Set2.

ord_subset([], _) :- !.
ord_subset([Head1|Tail1], [Head2|Tail2]) :-
	compare(Order, Head1, Head2),
	ord_subset(Order, Head1, Tail1, Head2, Tail2).

ord_subset(=, _, Tail1, _, Tail2) :-
	ord_subset(Tail1, Tail2).
ord_subset(>, Head1, Tail1, _, Tail2) :-
	ord_subset([Head1|Tail1], Tail2).



%   ord_subtract(+Set1, +Set2, ?Difference)
%   is true when Difference contains all and only the elements of Set1
%   which are not also in Set2.


ord_subtract([], _, []).
ord_subtract([Head1|Tail1], Set2, Difference) :-
	ord_subtract(Set2, Head1, Tail1, Difference).

ord_subtract([], Head1, Tail1, [Head1|Tail1]).
ord_subtract([Head2|Tail2], Head1, Tail1, Difference) :-
	compare(Order, Head1, Head2),
	ord_subtract(Order, Head1, Tail1, Head2, Tail2, Difference).

ord_subtract(<, Head1, Tail1, Head2, Tail2, [Head1|Difference]) :-
        'ord subtract'(Tail1, Head2, Tail2, Difference).
ord_subtract(>, Head1, Tail1, _,     Tail2, Difference) :-
        ord_subtract(Tail2, Head1, Tail1, Difference).
ord_subtract(=, _,     Tail1, _,     Tail2, Difference) :-
        ord_subtract(Tail1, Tail2, Difference).

'ord subtract'([], _, _, []).
'ord subtract'([Head1|Tail1], Head2, Tail2, Difference) :-
        compare(Order, Head1, Head2),
        ord_subtract(Order, Head1, Tail1, Head2, Tail2, Difference).


%   ord_symdiff(+Set1, +Set2, ?Difference)
%   is true when Difference is the symmetric difference of Set1 and Set2.

ord_symdiff(Set1, [], Set1) :- !.
ord_symdiff([], Set2, Set2) :- !.
ord_symdiff([Head1|Tail1], [Head2|Tail2], Difference) :-
	compare(Order, Head1, Head2),
	ord_symdiff(Order, Head1, Tail1, Head2, Tail2, Difference).

ord_symdiff(=, _,     Tail1, _,     Tail2, Difference) :-
	ord_symdiff(Tail1, Tail2, Difference).
ord_symdiff(<, Head1, Tail1, Head2, Tail2, [Head1|Difference]) :-
	ord_symdiff(Tail1, [Head2|Tail2], Difference).
ord_symdiff(>, Head1, Tail1, Head2, Tail2, [Head2|Difference]) :-
	ord_symdiff([Head1|Tail1], Tail2, Difference).



%   ord_union(+Set1, +Set2, ?Union)
%   is true when Union is the union of Set1 and Set2.  Note that when
%   something occurs in both sets, we want to retain only one copy.

ord_union([], Set2, Set2).
ord_union([Head1|Tail1], Set2, Union) :-
	ord_union(Set2, Head1, Tail1, Union).

ord_union([], Head1, Tail1, [Head1|Tail1]).
ord_union([Head2|Tail2], Head1, Tail1, Union) :-
	compare(Order, Head1, Head2),
	ord_union(Order, Head1, Tail1, Head2, Tail2, Union).

ord_union(=, Head,  Tail1, _,     Tail2, [Head|Union]) :-
	ord_union(Tail1, Tail2, Union).
ord_union(<, Head1, Tail1, Head2, Tail2, [Head1|Union]) :-
	ord_union(Tail1, [Head2|Tail2], Union).
ord_union(>, Head1, Tail1, Head2, Tail2, [Head2|Union]) :-
	ord_union([Head1|Tail1], Tail2, Union).


%   ord_union(+ListOfSets, ?Union)
%   is true when ListOfSets is given as a proper list of ordered sets
%   and Union is their union.  Letting K be the length of ListOfSets,
%   and N the sum of the sizes of its elements, the cost is of order
%   N.lg(K).  The auxiliary routine
%   ord_union_3(N, L, U, R)
%   is true when the union of the first N sets in L is U and
%   R is the remaining elements of L.

ord_union(ListOfSets, Union) :-
	length(ListOfSets, NumberOfSets),
	ord_union_3(NumberOfSets, ListOfSets, Union, []).

ord_union_3(0, R, [], R) :- !.
ord_union_3(1, [U|R], U, R) :- !.
ord_union_3(2, [A,B|R], U, R) :- !,
	ord_union(A, B, U).
ord_union_3(N, R0, U, R) :-
	P is N>>1,      % |first  half of list|
	Q is N- P,      % |second half of list|
	ord_union_3(P, R0, A, R1),
	ord_union_3(Q, R1, B, R),
	ord_union(A, B, U).


%   ord_del_element(+Set1, +Element, ?Set2)
%   is the equivalent of del_element for ordered sets.  Because it uses
%   ordering, it typically builds less structure, but is slower than
%   del_element.  I am beginning to wonder whether a predicate
%       set_plus(SmallSet, Element, LargeSet)
%   would be a better way of doing this, the idea being that
%   LargeSet = SmallSet U {Element} and Element is not in SmallSet.
%   There is already a predicate with this effect called select/3.

ord_del_element([], _, []).
ord_del_element([Head|Tail], Element, Set) :-
	compare(Order, Head, Element),
	ord_del_element(Order, Element, Head, Tail, Set).

ord_del_element(<, Element, Head, Tail, [Head|Set]) :-
	ord_del_element(Tail, Element, Set).
ord_del_element(=, _, _, Set, Set).
ord_del_element(>, _, Head, Tail, [Head|Tail]).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   subsumes_chk(General, Specific)
%   is true when Specific is an instance of General. However, this
%   predicate performs the test without binding any variables neither
%   in General nor in Specific.

subsumes_chk(General, Specific) :-
    \+((numbervars(Specific),
       \+ (General = Specific)
       )).

%   subsumes(General, Specific)
%   is true when Specific is an instance of General. Unlike subsumes_chk/2
%   this predicate will bind variables in General (but not those in Specific)
%   so that General becomes identical to Specific.

subsumes(General, Specific) :-
    subsumes_chk(General, Specific),
    General = Specific.

/*** SB-Prolog one
subsumes(X,Y) :- \+ (X=Y),!,fail.
subsumes(X,Y) :- numbervars(Y,0,_),\+ (X=Y),!,fail.
subsumes(_,_).
***/

%   my_variant(Term1, Term2)
%   is true when Term1 and Term2 are alphabetic variants. The definition 
%   here is not quite right;  if Term1 and Term2 share any variables it 
%   may give the wrong answer. It is only meant to be used when the two 
%   terms have no variables in common. 

/*** A naive first version */
my_variant(Term1, Term2) :-
    subsumes_chk(Term1, Term2),
    subsumes_chk(Term2, Term1).

*/
