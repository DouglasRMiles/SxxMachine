--------------------------------------------------------------------------------

This directory includes the following files:

automaton.tlp:
        An example of an omega-automaton, due to Horst Reichel of Technical
        University at Dresden, Germany.

bad.tlp:
bad2.tlp:
etc.
        Examples of wrong or suspect programs that test some of the
        diagnostic capabilities of "dra" and/or the top level.

coind.tlp:
coind2.tlp:
        A pair of trivial examples that show the difference between "new
        style" and "old style" coinduction.

coind_all.tlp:
coind2_all.tlp:
        A trivial example that tests coinduction together with findall/3,
        comes in both styles of coinduction.

coind_new.tlp:
coind_old.tlp:
        A trivial example that shows the inadequacies of both styles of
        coinduction.

comment_example.tlp:

        An example that demonstrates why tabled results must be annotated
        with the corresponding goals.  (See also
        "small_comment_example.tlp".)

co_t.tlp:
        A very simple example of a predicate that is both tabled and
        coinductive.
        NOTE: Eclipse loops on queries q2 and q3, Sicstus does not loop.

conditional.tlp:
        A wholly uninteresting example, designed to test that the
        interpreter handles conditionals correctly.

graph.tlp:
        A simple example that demonstrates a left-recursive program for
        finding paths in a graph.

guo_gupta_2_1.tlp:
guo_gupta_3_1.tlp:
guo_gupta_4_1.tlp:
guo_gupta_4_2.tlp:
guo_gupta_6_1.tlp:
        Examples 2.1, 3.1 etc. from "Tabled Logic Programming with
        Dynamic Reordering of Alternatives" by Hai-Feng Guo and Gopal
        Gupta.

LTL:
        A subdirectory with a version of Gopal Gupta's elegant interpreter
        for Linear Temporal Logic and a few example problems and queries.

mini_graph.tlp:
        A very basic version of graph: good for tracing the problem when
        something does not work.

mini_language.tlp:
        Gopal Gupta's parser/interpreter for a very small language, in a
        version that is suitable for execution only with a tabling
        implementation of Prolog.

module.tlp:
        A wholly uninteresting example, designed to test that the
        predicate names in the interpreted program cannot conflict with
        the names of the predicates that implement the interpreter.

paper_example.tlp:
        An example from "Linear Tabling Strategies and Optimizations" by
        Neng-Fa Zhou, Taisuke Sato and Yi-Dong Shen.

parse.tlp:
        An example attributed to David S. Warren, taken from from
        "Linear Tabling Strategies and Optimizations" by Neng-Fa Zhou,
        Taisuke Sato and Yi-Dong Shen.

simple1.tlp:
simple2.tlp:
        Two artificial examples to exercise tabling interpreters.

simple1_old_first.tlp:
        This is simple1.tlp with an additional directive:
           :- old_first all.
        to show that there is a difference in the order in which the
        solutions are produced.  In this example the discipline of producing
        old goals first results in a shorter computation.

small_comment_example.tlp:
        A minimal example that demonstrates why tabled results must be
        annotated with the corresponding goals. (See also
        "comment_example.tlp".)

support.pl:
supported.tlp:
        A pair of files to test the "support" feature.  "supported.tlp" is
        the example (cloned from graph.tlp), while "support.pl" is the
        "supporting software" in pure Prolog.

trivial_not_tabled.tlp:
        A trivial example in pure Prolog, a "smoke-test" for the
        interpreter.

trivial_tabled.tlp:
        A trivial example in Prolog with tabling, a "smoke-test" for the
        interpreter.

XSB:
        A subdirectory with various examples borrowed from the distribution
        of XSB.  (http://www.cs.sunysb.edu/~sbprolog/download_src.html)

--------------------------------------------------------------------------------
