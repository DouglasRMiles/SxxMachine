
:- table groundPattern/2 as incremental.
:- import variant_get_residual/2 from tables.

groundPattern([], []).
groundPattern([F|R],[true |RP]) :-
	nonvar(F),
	groundPattern(R,RP).
groundPattern([F|R],[false|RP]) :- 
	var(F),
	groundPattern(R,RP).

vcall_wrap(X) :-
	(call(X), fail
	;
	    (  variant_get_residual(X,[])
	    ;  fail
	    )
	).

call_wrap(X) :-
	(call(X), fail
	;
	    (  get_residual(X,[])
	    ;  fail
	    )
	).

test:- testv,fail.
test:- abolish_all_tables,fail.
test:- testu,fail.
test:- variant_get_residual(groundPattern(X,Y),[]),writeln(open(X,Y)),fail.
test.

testv:-   vcall_wrap(groundPattern([(1), (2)], P1)),writeln(var_gg(P1)),fail.
testv:-   vcall_wrap(groundPattern([(1), _X], P2)),writeln(var_gv(P2)),fail.
testv.

testu:-   call_wrap(groundPattern([(1), (2)], P1)),writeln(unif_gg(P1)),fail.
testu:-   call_wrap(groundPattern([(1), _X], P2)),writeln(unif_gv(P2)),fail.
testu.
